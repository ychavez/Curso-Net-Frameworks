//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EscuelaMVC.DbContext
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Curso1NetTGEntities : DbContext
    {
        public Curso1NetTGEntities()
            : base("name=Curso1NetTGEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Alumno> Alumno { get; set; }
        public virtual DbSet<Cursos> Cursos { get; set; }
        public virtual DbSet<Horarios> Horarios { get; set; }
        public virtual DbSet<Parametros> Parametros { get; set; }
        public virtual DbSet<AlumnoCursos> AlumnoCursos { get; set; }
    
        public virtual ObjectResult<GetAlumnos_Result> GetAlumnos(Nullable<System.Guid> iDAlumno)
        {
            var iDAlumnoParameter = iDAlumno.HasValue ?
                new ObjectParameter("IDAlumno", iDAlumno) :
                new ObjectParameter("IDAlumno", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAlumnos_Result>("GetAlumnos", iDAlumnoParameter);
        }
    
        public virtual ObjectResult<GETCursos_Result> GETCursos(Nullable<System.Guid> iDCursos)
        {
            var iDCursosParameter = iDCursos.HasValue ?
                new ObjectParameter("IDCursos", iDCursos) :
                new ObjectParameter("IDCursos", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GETCursos_Result>("GETCursos", iDCursosParameter);
        }
    
        public virtual int MantenimientoAlumnosBatch(Nullable<int> accion)
        {
            var accionParameter = accion.HasValue ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MantenimientoAlumnosBatch", accionParameter);
        }
    
        public virtual ObjectResult<GETHorarios_Result> GETHorarios(Nullable<System.Guid> iDHorario)
        {
            var iDHorarioParameter = iDHorario.HasValue ?
                new ObjectParameter("IDHorario", iDHorario) :
                new ObjectParameter("IDHorario", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GETHorarios_Result>("GETHorarios", iDHorarioParameter);
        }
    
        public virtual int MantenimientoHorario(Nullable<System.Guid> iDHorario, string nombre, string descripcionLarga, Nullable<int> accion)
        {
            var iDHorarioParameter = iDHorario.HasValue ?
                new ObjectParameter("IDHorario", iDHorario) :
                new ObjectParameter("IDHorario", typeof(System.Guid));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionLargaParameter = descripcionLarga != null ?
                new ObjectParameter("DescripcionLarga", descripcionLarga) :
                new ObjectParameter("DescripcionLarga", typeof(string));
    
            var accionParameter = accion.HasValue ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MantenimientoHorario", iDHorarioParameter, nombreParameter, descripcionLargaParameter, accionParameter);
        }
    
        public virtual int MantenimientoCursos(Nullable<System.Guid> idCursos, string nombre, Nullable<short> accion)
        {
            var idCursosParameter = idCursos.HasValue ?
                new ObjectParameter("IdCursos", idCursos) :
                new ObjectParameter("IdCursos", typeof(System.Guid));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var accionParameter = accion.HasValue ?
                new ObjectParameter("accion", accion) :
                new ObjectParameter("accion", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MantenimientoCursos", idCursosParameter, nombreParameter, accionParameter);
        }
    
        public virtual ObjectResult<GetAlumnosCursos_Result> GetAlumnosCursos(Nullable<System.Guid> iDAlumnoCursos, Nullable<System.Guid> iDAlumno, Nullable<System.Guid> iDCursos)
        {
            var iDAlumnoCursosParameter = iDAlumnoCursos.HasValue ?
                new ObjectParameter("IDAlumnoCursos", iDAlumnoCursos) :
                new ObjectParameter("IDAlumnoCursos", typeof(System.Guid));
    
            var iDAlumnoParameter = iDAlumno.HasValue ?
                new ObjectParameter("IDAlumno", iDAlumno) :
                new ObjectParameter("IDAlumno", typeof(System.Guid));
    
            var iDCursosParameter = iDCursos.HasValue ?
                new ObjectParameter("IDCursos", iDCursos) :
                new ObjectParameter("IDCursos", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAlumnosCursos_Result>("GetAlumnosCursos", iDAlumnoCursosParameter, iDAlumnoParameter, iDCursosParameter);
        }
    
        public virtual int MantenimientoAlumnosCursos(Nullable<System.Guid> iDAlumnoCursos, Nullable<System.Guid> iDAlumno, Nullable<System.Guid> iDCursos, Nullable<short> accion)
        {
            var iDAlumnoCursosParameter = iDAlumnoCursos.HasValue ?
                new ObjectParameter("IDAlumnoCursos", iDAlumnoCursos) :
                new ObjectParameter("IDAlumnoCursos", typeof(System.Guid));
    
            var iDAlumnoParameter = iDAlumno.HasValue ?
                new ObjectParameter("IDAlumno", iDAlumno) :
                new ObjectParameter("IDAlumno", typeof(System.Guid));
    
            var iDCursosParameter = iDCursos.HasValue ?
                new ObjectParameter("IDCursos", iDCursos) :
                new ObjectParameter("IDCursos", typeof(System.Guid));
    
            var accionParameter = accion.HasValue ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MantenimientoAlumnosCursos", iDAlumnoCursosParameter, iDAlumnoParameter, iDCursosParameter, accionParameter);
        }
    
        public virtual int MantenimientoAlumno(Nullable<System.Guid> iDAlumno, string nombre, string apellido, string correo, Nullable<int> accion)
        {
            var iDAlumnoParameter = iDAlumno.HasValue ?
                new ObjectParameter("IDAlumno", iDAlumno) :
                new ObjectParameter("IDAlumno", typeof(System.Guid));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var accionParameter = accion.HasValue ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MantenimientoAlumno", iDAlumnoParameter, nombreParameter, apellidoParameter, correoParameter, accionParameter);
        }
    }
}
